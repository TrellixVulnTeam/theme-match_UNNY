{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/data.service\";\nimport * as i2 from \"@angular/forms\";\nexport let CodePageComponent = /*#__PURE__*/(() => {\n  class CodePageComponent {\n    constructor(data) {\n      this.data = data;\n      this.pageNumber = new EventEmitter();\n      this.themeVal = new EventEmitter();\n      this._code = \"\";\n      this.name = \"\";\n      this.error = \"\";\n    }\n\n    set code(value) {\n      if (value) {\n        this._code = value;\n      }\n    }\n\n    get code() {\n      return this._code;\n    }\n\n    ngOnInit() {}\n\n    cancel() {\n      this.pageNumber.emit(0);\n    }\n\n    sendData() {\n      var theme = this.data.getRandomOption(this.code, this.name); //console.log(\"theme \" + theme);\n\n      if (theme == \"--\") {\n        this.error = \"A person with that name has already chosen a theme.\";\n      } else if (theme == \"++\") {\n        this.error = \"No more theme options available\";\n      } else if (theme == \"+-\") {\n        this.error = \"That code is invalid.\";\n      } else {\n        this.themeVal.emit(theme);\n        this.pageNumber.emit(2);\n      }\n    }\n\n  }\n\n  CodePageComponent.ɵfac = function CodePageComponent_Factory(t) {\n    return new (t || CodePageComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  CodePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CodePageComponent,\n    selectors: [[\"app-code-page\"]],\n    inputs: {\n      code: \"code\"\n    },\n    outputs: {\n      pageNumber: \"pageNumber\",\n      themeVal: \"themeVal\"\n    },\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"title\"], [\"name\", \"code\", \"type\", \"text\", 1, \"val\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"name\", \"type\", \"text\", 1, \"val\", 3, \"ngModel\", \"ngModelChange\"], [1, \"done\"], [1, \"bottom\", 3, \"click\"]],\n    template: function CodePageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"ENTER CODE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CodePageComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.code = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"ENTER NAME\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CodePageComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function CodePageComponent_Template_button_click_11_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(12, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function CodePageComponent_Template_button_click_13_listener() {\n          return ctx.sendData();\n        });\n        i0.ɵɵtext(14, \"Done\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.code);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.error);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"h2[_ngcontent-%COMP%]{height:70px;padding-top:10px}button[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{color:#ffa743;background-color:#fff;font-family:Spartan,sans-serif;font-size:60px;font-weight:900;text-align:center;vertical-align:middle}.title[_ngcontent-%COMP%]{padding-left:50px;padding-right:50px}.val[_ngcontent-%COMP%]{height:80px;width:500px}input[_ngcontent-%COMP%]{font-family:Spartan,sans-serif;font-size:40px;color:#ffa743}.bottom[_ngcontent-%COMP%]{display:inline-block;margin-left:20px;margin-right:20px;color:#ffa743;width:250px}p[_ngcontent-%COMP%]{font-family:Spartan,sans-serif;font-size:20px;font-weight:400;text-align:center;color:#fff}.done[_ngcontent-%COMP%]{padding-top:30px}\"]\n  });\n  return CodePageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}