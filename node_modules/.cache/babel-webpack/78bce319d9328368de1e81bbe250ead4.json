{"ast":null,"code":"import _classCallCheck from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵlogAuthEmulatorError, ɵfetchInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\nimport 'firebase/database';\nimport * as i2 from '@angular/fire/auth';\nimport { USE_EMULATOR as USE_EMULATOR$1 } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\nimport * as ɵngcc0 from '@angular/core';\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isFirebaseDataSnapshot(value) {\n  return typeof value.exportVal === 'function';\n}\n\nfunction isNil(obj) {\n  return obj === undefined || obj === null;\n}\n\nfunction isFirebaseRef(value) {\n  return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\n\n\nfunction getRef(database, pathRef) {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef : database.ref(pathRef);\n}\n\nfunction checkOperationCases(item, cases) {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n\n  throw new Error(\"Expects a string, snapshot, or reference. Got: \".concat(typeof item));\n}\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\n\n\nfunction fromRef(ref, event) {\n  var listenType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'on';\n  var scheduler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : asyncScheduler;\n  return new Observable(function (subscriber) {\n    var fn = null;\n    fn = ref[listenType](event, function (snapshot, prevKey) {\n      scheduler.schedule(function () {\n        subscriber.next({\n          snapshot: snapshot,\n          prevKey: prevKey\n        });\n      });\n\n      if (listenType === 'once') {\n        scheduler.schedule(function () {\n          return subscriber.complete();\n        });\n      }\n    }, function (err) {\n      scheduler.schedule(function () {\n        return subscriber.error(err);\n      });\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe: function unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        unsubscribe: function unsubscribe() {}\n      };\n    }\n  }).pipe(map(function (payload) {\n    var snapshot = payload.snapshot,\n        prevKey = payload.prevKey;\n    var key = null;\n\n    if (snapshot.exists()) {\n      key = snapshot.key;\n    }\n\n    return {\n      type: event,\n      payload: snapshot,\n      prevKey: prevKey,\n      key: key\n    };\n  }), share());\n}\n\nfunction listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(function (snapshotAction) {\n    var childEvent$ = [of(snapshotAction)];\n    events.forEach(function (event) {\n      return childEvent$.push(fromRef(ref, event, 'on', scheduler));\n    });\n    return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n\nfunction positionFor(changes, key) {\n  var len = changes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  var payload = action.payload,\n      prevKey = action.prevKey,\n      key = action.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey);\n\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        var _prevKey = null;\n        action.payload.forEach(function (payload) {\n          var action = {\n            payload: payload,\n            type: 'value',\n            prevKey: _prevKey,\n            key: payload.key\n          };\n          _prevKey = payload.key;\n          current = [].concat(_toConsumableArray(current), [action]);\n          return false;\n        });\n      }\n\n      return current;\n\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        var previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(function (x) {\n            return x.payload.key !== payload.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action].concat(_toConsumableArray(current));\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n\n      return current;\n\n    case 'child_removed':\n      return current.filter(function (x) {\n        return x.payload.key !== payload.key;\n      });\n\n    case 'child_changed':\n      return current.map(function (x) {\n        return x.payload.key === key ? action : x;\n      });\n\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n    // default will also remove null results\n\n    default:\n      return current;\n  }\n}\n\nfunction validateEventsArray(events) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n\n  return events;\n}\n\nfunction _snapshotChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  return listChanges(query, events, scheduler);\n}\n\nfunction _stateChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  var childEvent$ = events.map(function (event) {\n    return fromRef(query, event, 'on', scheduler);\n  });\n  return merge.apply(void 0, _toConsumableArray(childEvent$));\n}\n\nfunction _auditTrail(query, events, scheduler) {\n  var auditTrail$ = _stateChanges(query, events).pipe(scan(function (current, action) {\n    return [].concat(_toConsumableArray(current), [action]);\n  }, []));\n\n  return waitForLoaded(query, auditTrail$, scheduler);\n}\n\nfunction loadedData(query, scheduler) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, 'value', 'on', scheduler).pipe(map(function (data) {\n    // Store the last key in the data set\n    var lastKeyToLoad; // Loop through loaded dataset to find the last key\n\n    data.payload.forEach(function (child) {\n      lastKeyToLoad = child.key;\n      return false;\n    }); // return data set and the current last key loaded\n\n    return {\n      data: data,\n      lastKeyToLoad: lastKeyToLoad\n    };\n  }));\n}\n\nfunction waitForLoaded(query, action$, scheduler) {\n  var loaded$ = loadedData(query, scheduler);\n  return loaded$.pipe(withLatestFrom(action$), // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        loaded = _ref2[0],\n        actions = _ref2[1];\n\n    // Store the last key in the data set\n    var lastKeyToLoad = loaded.lastKeyToLoad; // Store all child keys loaded at this point\n\n    var loadedKeys = actions.map(function (snap) {\n      return snap.key;\n    });\n    return {\n      actions: actions,\n      lastKeyToLoad: lastKeyToLoad,\n      loadedKeys: loadedKeys\n    };\n  }), // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(function (meta) {\n    return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n  }), // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(function (meta) {\n    return meta.actions;\n  }));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n  return function dataOperation(item, value) {\n    return checkOperationCases(item, {\n      stringCase: function stringCase() {\n        return ref.child(item)[operation](value);\n      },\n      firebaseCase: function firebaseCase() {\n        return item[operation](value);\n      },\n      snapshotCase: function snapshotCase() {\n        return item.ref[operation](value);\n      }\n    });\n  };\n} // TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\n\n\nfunction createRemoveMethod(ref) {\n  return function remove(item) {\n    if (!item) {\n      return ref.remove();\n    }\n\n    return checkOperationCases(item, {\n      stringCase: function stringCase() {\n        return ref.child(item).remove();\n      },\n      firebaseCase: function firebaseCase() {\n        return item.remove();\n      },\n      snapshotCase: function snapshotCase() {\n        return item.ref.remove();\n      }\n    });\n  };\n}\n\nfunction createListReference(query, afDatabase) {\n  var outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  var refInZone = afDatabase.schedulers.ngZone.run(function () {\n    return query.ref;\n  });\n  return {\n    query: query,\n    update: createDataOperationMethod(refInZone, 'update'),\n    set: createDataOperationMethod(refInZone, 'set'),\n    push: function push(data) {\n      return refInZone.push(data);\n    },\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges: function snapshotChanges(events) {\n      return _snapshotChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    stateChanges: function stateChanges(events) {\n      return _stateChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    auditTrail: function auditTrail(events) {\n      return _auditTrail(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    valueChanges: function valueChanges(events, options) {\n      var snapshotChanges$ = _snapshotChanges(query, events, outsideAngularScheduler);\n\n      return snapshotChanges$.pipe(map(function (actions) {\n        return actions.map(function (a) {\n          if (options && options.idField) {\n            return Object.assign(Object.assign({}, a.payload.val()), _defineProperty({}, options.idField, a.key));\n          } else {\n            return a.payload.val();\n          }\n        });\n      }), afDatabase.keepUnstableUntilFirst);\n    }\n  };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n  return function snapshotChanges() {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n\nfunction createObjectReference(query, afDatabase) {\n  return {\n    query: query,\n    snapshotChanges: function snapshotChanges() {\n      return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    update: function update(data) {\n      return query.ref.update(data);\n    },\n    set: function set(data) {\n      return query.ref.set(data);\n    },\n    remove: function remove() {\n      return query.ref.remove();\n    },\n    valueChanges: function valueChanges() {\n      var snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map(function (action) {\n        return action.payload.exists() ? action.payload.val() : null;\n      }));\n    }\n  };\n}\n\nvar URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nvar USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\n\nvar AngularFireDatabase = /*#__PURE__*/function () {\n  function AngularFireDatabase(options, nameOrConfig, databaseURL, // tslint:disable-next-line:ban-types\n  platformId, zone, _useEmulator, // tuple isn't working here\n  useAuthEmulator) {\n    _classCallCheck(this, AngularFireDatabase);\n\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n    var useEmulator = _useEmulator;\n    var app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n\n    if (!firebase.auth && useAuthEmulator) {\n      ɵlogAuthEmulatorError();\n    }\n\n    this.database = ɵfetchInstance(\"\".concat(app.name, \".database.\").concat(databaseURL), 'AngularFireDatabase', app, function () {\n      var database = zone.runOutsideAngular(function () {\n        return app.database(databaseURL || undefined);\n      });\n\n      if (useEmulator) {\n        database.useEmulator.apply(database, _toConsumableArray(useEmulator));\n      }\n\n      return database;\n    }, [useEmulator]);\n  }\n\n  _createClass(AngularFireDatabase, [{\n    key: \"list\",\n    value: function list(pathOrRef, queryFn) {\n      var _this = this;\n\n      var ref = this.schedulers.ngZone.runOutsideAngular(function () {\n        return getRef(_this.database, pathOrRef);\n      });\n      var query = ref;\n\n      if (queryFn) {\n        query = queryFn(ref);\n      }\n\n      return createListReference(query, this);\n    }\n  }, {\n    key: \"object\",\n    value: function object(pathOrRef) {\n      var _this2 = this;\n\n      var ref = this.schedulers.ngZone.runOutsideAngular(function () {\n        return getRef(_this2.database, pathOrRef);\n      });\n      return createObjectReference(ref, this);\n    }\n  }, {\n    key: \"createPushId\",\n    value: function createPushId() {\n      var _this3 = this;\n\n      var ref = this.schedulers.ngZone.runOutsideAngular(function () {\n        return _this3.database.ref();\n      });\n      return ref.push().key;\n    }\n  }]);\n\n  return AngularFireDatabase;\n}();\n\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) {\n  return new (t || AngularFireDatabase)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(URL, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(USE_EMULATOR, 8), ɵngcc0.ɵɵinject(USE_EMULATOR$1, 8));\n};\n/** @nocollapse */\n\n\nAngularFireDatabase.ɵprov = i0.ɵɵdefineInjectable({\n  factory: function AngularFireDatabase_Factory() {\n    return new AngularFireDatabase(i0.ɵɵinject(i1.FIREBASE_OPTIONS), i0.ɵɵinject(i1.FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.USE_EMULATOR, 8));\n  },\n  token: AngularFireDatabase,\n  providedIn: \"any\"\n});\n/** @nocollapse */\n\nAngularFireDatabase.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [URL]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR$1]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FIREBASE_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FIREBASE_APP_NAME]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [URL]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR$1]\n      }]\n    }];\n  }, null);\n})();\n\nvar AngularFireDatabaseModule = function AngularFireDatabaseModule() {\n  _classCallCheck(this, AngularFireDatabaseModule);\n};\n\nAngularFireDatabaseModule.ɵfac = function AngularFireDatabaseModule_Factory(t) {\n  return new (t || AngularFireDatabaseModule)();\n};\n\nAngularFireDatabaseModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: AngularFireDatabaseModule\n});\nAngularFireDatabaseModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [AngularFireDatabase]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireDatabase]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, _auditTrail as auditTrail, createListReference, fromRef, listChanges, _snapshotChanges as snapshotChanges, _stateChanges as stateChanges }; //# sourceMappingURL=angular-fire-database.js.map","map":{"version":3,"sources":["/home/alicia/dev/angular/theme-picker/node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-database.js"],"names":["i0","InjectionToken","Injectable","Inject","Optional","PLATFORM_ID","NgZone","NgModule","asyncScheduler","Observable","of","merge","map","share","switchMap","scan","distinctUntilChanged","withLatestFrom","skipWhile","i1","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","ɵfirebaseAppFactory","ɵlogAuthEmulatorError","ɵfetchInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","USE_EMULATOR","USE_EMULATOR$1","firebase","ɵngcc0","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","undefined","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","fromRef","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","pipe","payload","key","exists","type","listChanges","events","snapshotAction","childEvent$","forEach","push","buildView","positionFor","changes","len","length","i","positionAfter","current","action","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","keepUnstableUntilFirst","valueChanges","options","snapshotChanges$","a","idField","Object","assign","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","nameOrConfig","databaseURL","platformId","zone","_useEmulator","useAuthEmulator","useEmulator","app","auth","name","runOutsideAngular","pathOrRef","queryFn","ɵfac","AngularFireDatabase_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","token","providedIn","ctorParameters","decorators","args","String","ngDevMode","ɵsetClassMetadata","AngularFireDatabaseModule","AngularFireDatabaseModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵlogAuthEmulatorError, ɵfetchInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\nimport 'firebase/database';\nimport * as i2 from '@angular/fire/auth';\nimport { USE_EMULATOR as USE_EMULATOR$1 } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType === 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType === 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return {\n                unsubscribe() {\n                }\n            };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) !== prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\nfunction validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n\nfunction stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        // Store the last key in the data set\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n\nfunction createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n    return {\n        query,\n        update: createDataOperationMethod(refInZone, 'update'),\n        set: createDataOperationMethod(refInZone, 'set'),\n        push: (data) => refInZone.push(data),\n        remove: createRemoveMethod(refInZone),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        valueChanges(events, options) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map(actions => actions.map(a => {\n                if (options && options.idField) {\n                    return Object.assign(Object.assign({}, a.payload.val()), {\n                        [options.idField]: a.key\n                    });\n                }\n                else {\n                    return a.payload.val();\n                }\n            })), afDatabase.keepUnstableUntilFirst);\n        }\n    };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n    constructor(options, nameOrConfig, databaseURL, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, _useEmulator, // tuple isn't working here\n    useAuthEmulator) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n        const useEmulator = _useEmulator;\n        const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n        if (!firebase.auth && useAuthEmulator) {\n            ɵlogAuthEmulatorError();\n        }\n        this.database = ɵfetchInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app, () => {\n            const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n            if (useEmulator) {\n                database.useEmulator(...useEmulator);\n            }\n            return database;\n        }, [useEmulator]);\n    }\n    list(pathOrRef, queryFn) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n        return ref.push().key;\n    }\n}\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) { return new (t || AngularFireDatabase)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(URL, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(USE_EMULATOR, 8), ɵngcc0.ɵɵinject(USE_EMULATOR$1, 8)); };\n/** @nocollapse */ AngularFireDatabase.ɵprov = i0.ɵɵdefineInjectable({ factory: function AngularFireDatabase_Factory() { return new AngularFireDatabase(i0.ɵɵinject(i1.FIREBASE_OPTIONS), i0.ɵɵinject(i1.FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.USE_EMULATOR, 8)); }, token: AngularFireDatabase, providedIn: \"any\" });\n/** @nocollapse */\nAngularFireDatabase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [URL,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [USE_EMULATOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [USE_EMULATOR$1,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireDatabase, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [URL]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [USE_EMULATOR]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [USE_EMULATOR$1]\n            }] }]; }, null); })();\n\nclass AngularFireDatabaseModule {\n}\nAngularFireDatabaseModule.ɵfac = function AngularFireDatabaseModule_Factory(t) { return new (t || AngularFireDatabaseModule)(); };\nAngularFireDatabaseModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularFireDatabaseModule });\nAngularFireDatabaseModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [AngularFireDatabase] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireDatabase]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n\n//# sourceMappingURL=angular-fire-database.js.map"]},"metadata":{},"sourceType":"module"}