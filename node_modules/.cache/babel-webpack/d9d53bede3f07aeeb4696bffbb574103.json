{"ast":null,"code":"import _toArray from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _toConsumableArray from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alicia/dev/angular/theme-picker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { queueScheduler, asyncScheduler } from 'rxjs';\nimport { tap, subscribeOn, observeOn } from 'rxjs/operators';\nimport { InjectionToken, Version, isDevMode, NgZone, Optional, VERSION as VERSION$1, NgModule, Inject, PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\nimport * as ɵngcc0 from '@angular/core';\n\nfunction noop() {}\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\n// tslint:disable-next-line:class-name\n\n\nvar ɵZoneScheduler = /*#__PURE__*/function () {\n  function ɵZoneScheduler(zone) {\n    var delegate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : queueScheduler;\n\n    _classCallCheck(this, ɵZoneScheduler);\n\n    this.zone = zone;\n    this.delegate = delegate;\n  }\n\n  _createClass(ɵZoneScheduler, [{\n    key: \"now\",\n    value: function now() {\n      return this.delegate.now();\n    }\n  }, {\n    key: \"schedule\",\n    value: function schedule(work, delay, state) {\n      var targetZone = this.zone; // Wrap the specified work function to make sure that if nested scheduling takes place the\n      // work is executed in the correct zone\n\n      var workInZone = function workInZone(state) {\n        var _this = this;\n\n        targetZone.runGuarded(function () {\n          work.apply(_this, [state]);\n        });\n      }; // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n      // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n      // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n\n\n      return this.delegate.schedule(workInZone, delay, state);\n    }\n  }]);\n\n  return ɵZoneScheduler;\n}(); // tslint:disable-next-line:class-name\n\n\nvar ɵBlockUntilFirstOperator = /*#__PURE__*/function () {\n  function ɵBlockUntilFirstOperator(zone) {\n    _classCallCheck(this, ɵBlockUntilFirstOperator);\n\n    this.zone = zone;\n    this.task = null;\n  }\n\n  _createClass(ɵBlockUntilFirstOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var unscheduleTask = this.unscheduleTask.bind(this);\n      this.task = this.zone.run(function () {\n        return Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n      });\n      return source.pipe(tap({\n        next: unscheduleTask,\n        complete: unscheduleTask,\n        error: unscheduleTask\n      })).subscribe(subscriber).add(unscheduleTask);\n    }\n  }, {\n    key: \"unscheduleTask\",\n    value: function unscheduleTask() {\n      var _this2 = this;\n\n      // maybe this is a race condition, invoke in a timeout\n      // hold for 10ms while I try to figure out what is going on\n      setTimeout(function () {\n        if (_this2.task != null && _this2.task.state === 'scheduled') {\n          _this2.task.invoke();\n\n          _this2.task = null;\n        }\n      }, 10);\n    }\n  }]);\n\n  return ɵBlockUntilFirstOperator;\n}(); // tslint:disable-next-line:class-name\n\n\nvar ɵAngularFireSchedulers = function ɵAngularFireSchedulers(ngZone) {\n  _classCallCheck(this, ɵAngularFireSchedulers);\n\n  this.ngZone = ngZone;\n  this.outsideAngular = ngZone.runOutsideAngular(function () {\n    return new ɵZoneScheduler(Zone.current);\n  });\n  this.insideAngular = ngZone.run(function () {\n    return new ɵZoneScheduler(Zone.current, asyncScheduler);\n  });\n};\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n */\n\n\nfunction ɵkeepUnstableUntilFirstFactory(schedulers) {\n  return function keepUnstableUntilFirst(obs$) {\n    obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\n    return obs$.pipe( // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n    subscribeOn(schedulers.outsideAngular), // Run operators inside the angular zone (e.g. side effects via tap())\n    observeOn(schedulers.insideAngular) // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n    // share()\n    );\n  };\n} // DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\n\n\nvar noopFunctions = ['ngOnDestroy']; // INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\n\nvar ɵlazySDKProxy = function ɵlazySDKProxy(klass, observable, zone) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return new Proxy(klass, {\n    get: function get(_, name) {\n      return zone.runOutsideAngular(function () {\n        var _a;\n\n        if (klass[name]) {\n          if ((_a = options === null || options === void 0 ? void 0 : options.spy) === null || _a === void 0 ? void 0 : _a.get) {\n            options.spy.get(name, klass[name]);\n          }\n\n          return klass[name];\n        }\n\n        if (noopFunctions.indexOf(name) > -1) {\n          return function () {};\n        }\n\n        var promise = observable.toPromise().then(function (mod) {\n          var ret = mod && mod[name]; // TODO move to proper type guards\n\n          if (typeof ret === 'function') {\n            return ret.bind(mod);\n          } else if (ret && ret.then) {\n            return ret.then(function (res) {\n              return zone.run(function () {\n                return res;\n              });\n            });\n          } else {\n            return zone.run(function () {\n              return ret;\n            });\n          }\n        }); // recurse the proxy\n\n        return new Proxy(function () {}, {\n          get: function get(_, name) {\n            return promise[name];\n          },\n          // TODO handle callbacks as transparently as I can\n          apply: function apply(self, _, args) {\n            return promise.then(function (it) {\n              var _a;\n\n              var res = it && it.apply(void 0, _toConsumableArray(args));\n\n              if ((_a = options === null || options === void 0 ? void 0 : options.spy) === null || _a === void 0 ? void 0 : _a.apply) {\n                options.spy.apply(name, args, res);\n              }\n\n              return res;\n            });\n          }\n        });\n      });\n    }\n  });\n};\n\nvar ɵapplyMixins = function ɵapplyMixins(derivedCtor, constructors) {\n  constructors.forEach(function (baseCtor) {\n    Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach(function (name) {\n      Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name));\n    });\n  });\n};\n\nvar FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\nvar FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.nameOrConfig'); // Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\n\nvar FirebaseApp = function FirebaseApp() {\n  _classCallCheck(this, FirebaseApp);\n};\n\nvar VERSION = new Version('6.1.5');\n\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n  var name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n  var config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n  config.name = config.name || name; // Added any due to some inconsistency between @firebase/app and firebase types\n\n  var existingApp = firebase.apps.filter(function (app) {\n    return app && app.name === config.name;\n  })[0]; // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n  // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n\n  var app = existingApp || zone.runOutsideAngular(function () {\n    return firebase.initializeApp(options, config);\n  });\n\n  try {\n    if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n      var hmr = !!module.hot;\n      log('error', \"\".concat(app.name, \" Firebase App already initialized with different options\").concat(hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'));\n    }\n  } catch (e) {}\n\n  return app;\n}\n\nvar ɵlogAuthEmulatorError = function ɵlogAuthEmulatorError() {\n  // TODO sort this out, https://github.com/angular/angularfire/issues/2656\n  log('warn', 'You may need to import \\'firebase/auth\\' manually in your component rather than rely on AngularFireAuth\\'s dynamic import, when using the emulator suite https://github.com/angular/angularfire/issues/2656');\n};\n\nvar log = function log(level) {\n  if (isDevMode() && typeof console !== 'undefined') {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_console = console)[level].apply(_console, args);\n  }\n};\n\nvar ɵ0 = log;\nglobalThis.ɵAngularfireInstanceCache || (globalThis.ɵAngularfireInstanceCache = new Map());\n\nfunction ɵfetchInstance(cacheKey, moduleName, app, fn, args) {\n  var _ref = globalThis.ɵAngularfireInstanceCache.get(cacheKey) || [],\n      _ref2 = _toArray(_ref),\n      instance = _ref2[0],\n      cachedArgs = _ref2.slice(1);\n\n  if (instance) {\n    try {\n      if (args.some(function (arg, i) {\n        var cachedArg = cachedArgs[i];\n\n        if (arg && typeof arg === 'object') {\n          return JSON.stringify(arg) !== JSON.stringify(cachedArg);\n        } else {\n          return arg !== cachedArg;\n        }\n      })) {\n        var hmr = !!module.hot;\n        log('error', \"\".concat(moduleName, \" was already initialized on the \").concat(app.name, \" Firebase App instance with different settings.\").concat(hmr ? ' You may need to reload as Firebase is not HMR aware.' : ''));\n      }\n    } catch (e) {}\n\n    return instance;\n  } else {\n    var newInstance = fn();\n    globalThis.ɵAngularfireInstanceCache.set(cacheKey, [newInstance].concat(_toConsumableArray(args)));\n    return newInstance;\n  }\n}\n\nvar FIREBASE_APP_PROVIDER = {\n  provide: FirebaseApp,\n  useFactory: ɵfirebaseAppFactory,\n  deps: [FIREBASE_OPTIONS, NgZone, [new Optional(), FIREBASE_APP_NAME]]\n};\n\nvar AngularFireModule = /*#__PURE__*/function () {\n  // tslint:disable-next-line:ban-types\n  function AngularFireModule(platformId) {\n    _classCallCheck(this, AngularFireModule);\n\n    firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n    firebase.registerVersion('angular', VERSION$1.full);\n  }\n\n  _createClass(AngularFireModule, null, [{\n    key: \"initializeApp\",\n    value: function initializeApp(options, nameOrConfig) {\n      return {\n        ngModule: AngularFireModule,\n        providers: [{\n          provide: FIREBASE_OPTIONS,\n          useValue: options\n        }, {\n          provide: FIREBASE_APP_NAME,\n          useValue: nameOrConfig\n        }]\n      };\n    }\n  }]);\n\n  return AngularFireModule;\n}();\n\nAngularFireModule.ɵfac = function AngularFireModule_Factory(t) {\n  return new (t || AngularFireModule)(ɵngcc0.ɵɵinject(PLATFORM_ID));\n};\n\nAngularFireModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: AngularFireModule\n});\nAngularFireModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [FIREBASE_APP_PROVIDER]\n});\n/** @nocollapse */\n\nAngularFireModule.ctorParameters = function () {\n  return [{\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireModule, [{\n    type: NgModule,\n    args: [{\n      providers: [FIREBASE_APP_PROVIDER]\n    }]\n  }], function () {\n    return [{\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, VERSION, ɵ0, ɵAngularFireSchedulers, ɵBlockUntilFirstOperator, ɵZoneScheduler, ɵapplyMixins, ɵfetchInstance, ɵfirebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵlazySDKProxy, ɵlogAuthEmulatorError }; //# sourceMappingURL=angular-fire.js.map","map":{"version":3,"sources":["/home/alicia/dev/angular/theme-picker/node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire.js"],"names":["queueScheduler","asyncScheduler","tap","subscribeOn","observeOn","InjectionToken","Version","isDevMode","NgZone","Optional","VERSION","VERSION$1","NgModule","Inject","PLATFORM_ID","firebase","ɵngcc0","noop","ɵZoneScheduler","zone","delegate","now","work","delay","state","targetZone","workInZone","runGuarded","apply","schedule","ɵBlockUntilFirstOperator","task","subscriber","source","unscheduleTask","bind","run","Zone","current","scheduleMacroTask","pipe","next","complete","error","subscribe","add","setTimeout","invoke","ɵAngularFireSchedulers","ngZone","outsideAngular","runOutsideAngular","insideAngular","ɵkeepUnstableUntilFirstFactory","schedulers","keepUnstableUntilFirst","obs$","lift","noopFunctions","ɵlazySDKProxy","klass","observable","options","Proxy","get","_","name","_a","spy","indexOf","promise","toPromise","then","mod","ret","res","self","args","it","ɵapplyMixins","derivedCtor","constructors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","FIREBASE_OPTIONS","FIREBASE_APP_NAME","FirebaseApp","ɵfirebaseAppFactory","nameOrConfig","config","existingApp","apps","filter","app","initializeApp","JSON","stringify","hmr","module","hot","log","e","ɵlogAuthEmulatorError","level","console","ɵ0","globalThis","ɵAngularfireInstanceCache","Map","ɵfetchInstance","cacheKey","moduleName","fn","instance","cachedArgs","some","arg","i","cachedArg","newInstance","set","FIREBASE_APP_PROVIDER","provide","useFactory","deps","AngularFireModule","platformId","registerVersion","full","toString","ngModule","providers","useValue","ɵfac","AngularFireModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ctorParameters","decorators","ngDevMode","ɵsetClassMetadata"],"mappings":"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","sourcesContent":["import { queueScheduler, asyncScheduler } from 'rxjs';\nimport { tap, subscribeOn, observeOn } from 'rxjs/operators';\nimport { InjectionToken, Version, isDevMode, NgZone, Optional, VERSION as VERSION$1, NgModule, Inject, PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction noop() {\n}\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\n// tslint:disable-next-line:class-name\nclass ɵZoneScheduler {\n    constructor(zone, delegate = queueScheduler) {\n        this.zone = zone;\n        this.delegate = delegate;\n    }\n    now() {\n        return this.delegate.now();\n    }\n    schedule(work, delay, state) {\n        const targetZone = this.zone;\n        // Wrap the specified work function to make sure that if nested scheduling takes place the\n        // work is executed in the correct zone\n        const workInZone = function (state) {\n            targetZone.runGuarded(() => {\n                work.apply(this, [state]);\n            });\n        };\n        // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n        // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n        // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n        return this.delegate.schedule(workInZone, delay, state);\n    }\n}\n// tslint:disable-next-line:class-name\nclass ɵBlockUntilFirstOperator {\n    constructor(zone) {\n        this.zone = zone;\n        this.task = null;\n    }\n    call(subscriber, source) {\n        const unscheduleTask = this.unscheduleTask.bind(this);\n        this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n        return source.pipe(tap({ next: unscheduleTask, complete: unscheduleTask, error: unscheduleTask })).subscribe(subscriber).add(unscheduleTask);\n    }\n    unscheduleTask() {\n        // maybe this is a race condition, invoke in a timeout\n        // hold for 10ms while I try to figure out what is going on\n        setTimeout(() => {\n            if (this.task != null && this.task.state === 'scheduled') {\n                this.task.invoke();\n                this.task = null;\n            }\n        }, 10);\n    }\n}\n// tslint:disable-next-line:class-name\nclass ɵAngularFireSchedulers {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n        this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n    }\n}\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n */\nfunction ɵkeepUnstableUntilFirstFactory(schedulers) {\n    return function keepUnstableUntilFirst(obs$) {\n        obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\n        return obs$.pipe(\n        // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n        subscribeOn(schedulers.outsideAngular), \n        // Run operators inside the angular zone (e.g. side effects via tap())\n        observeOn(schedulers.insideAngular)\n        // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n        // share()\n        );\n    };\n}\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nconst ɵlazySDKProxy = (klass, observable, zone, options = {}) => {\n    return new Proxy(klass, {\n        get: (_, name) => zone.runOutsideAngular(() => {\n            var _a;\n            if (klass[name]) {\n                if ((_a = options === null || options === void 0 ? void 0 : options.spy) === null || _a === void 0 ? void 0 : _a.get) {\n                    options.spy.get(name, klass[name]);\n                }\n                return klass[name];\n            }\n            if (noopFunctions.indexOf(name) > -1) {\n                return () => {\n                };\n            }\n            const promise = observable.toPromise().then(mod => {\n                const ret = mod && mod[name];\n                // TODO move to proper type guards\n                if (typeof ret === 'function') {\n                    return ret.bind(mod);\n                }\n                else if (ret && ret.then) {\n                    return ret.then((res) => zone.run(() => res));\n                }\n                else {\n                    return zone.run(() => ret);\n                }\n            });\n            // recurse the proxy\n            return new Proxy(() => { }, {\n                get: (_, name) => promise[name],\n                // TODO handle callbacks as transparently as I can\n                apply: (self, _, args) => promise.then(it => {\n                    var _a;\n                    const res = it && it(...args);\n                    if ((_a = options === null || options === void 0 ? void 0 : options.spy) === null || _a === void 0 ? void 0 : _a.apply) {\n                        options.spy.apply(name, args, res);\n                    }\n                    return res;\n                })\n            });\n        })\n    });\n};\nconst ɵapplyMixins = (derivedCtor, constructors) => {\n    constructors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach((name) => {\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name));\n        });\n    });\n};\n\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.nameOrConfig');\n// Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\nclass FirebaseApp {\n}\nconst VERSION = new Version('6.1.5');\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    // Added any due to some inconsistency between @firebase/app and firebase types\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n    const app = (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config)));\n    try {\n        if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n            const hmr = !!module.hot;\n            log('error', `${app.name} Firebase App already initialized with different options${hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'}`);\n        }\n    }\n    catch (e) { }\n    return app;\n}\nconst ɵlogAuthEmulatorError = () => {\n    // TODO sort this out, https://github.com/angular/angularfire/issues/2656\n    log('warn', 'You may need to import \\'firebase/auth\\' manually in your component rather than rely on AngularFireAuth\\'s dynamic import, when using the emulator suite https://github.com/angular/angularfire/issues/2656');\n};\nconst log = (level, ...args) => {\n    if (isDevMode() && typeof console !== 'undefined') {\n        console[level](...args);\n    }\n};\nconst ɵ0 = log;\nglobalThis.ɵAngularfireInstanceCache || (globalThis.ɵAngularfireInstanceCache = new Map());\nfunction ɵfetchInstance(cacheKey, moduleName, app, fn, args) {\n    const [instance, ...cachedArgs] = globalThis.ɵAngularfireInstanceCache.get(cacheKey) || [];\n    if (instance) {\n        try {\n            if (args.some((arg, i) => {\n                const cachedArg = cachedArgs[i];\n                if (arg && typeof arg === 'object') {\n                    return JSON.stringify(arg) !== JSON.stringify(cachedArg);\n                }\n                else {\n                    return arg !== cachedArg;\n                }\n            })) {\n                const hmr = !!module.hot;\n                log('error', `${moduleName} was already initialized on the ${app.name} Firebase App instance with different settings.${hmr ? ' You may need to reload as Firebase is not HMR aware.' : ''}`);\n            }\n        }\n        catch (e) { }\n        return instance;\n    }\n    else {\n        const newInstance = fn();\n        globalThis.ɵAngularfireInstanceCache.set(cacheKey, [newInstance, ...args]);\n        return newInstance;\n    }\n}\nconst FIREBASE_APP_PROVIDER = {\n    provide: FirebaseApp,\n    useFactory: ɵfirebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\nclass AngularFireModule {\n    // tslint:disable-next-line:ban-types\n    constructor(platformId) {\n        firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n        firebase.registerVersion('angular', VERSION$1.full);\n    }\n    static initializeApp(options, nameOrConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        };\n    }\n}\nAngularFireModule.ɵfac = function AngularFireModule_Factory(t) { return new (t || AngularFireModule)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nAngularFireModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularFireModule });\nAngularFireModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [FIREBASE_APP_PROVIDER] });\n/** @nocollapse */\nAngularFireModule.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFireModule, [{\n        type: NgModule,\n        args: [{\n                providers: [FIREBASE_APP_PROVIDER]\n            }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, VERSION, ɵ0, ɵAngularFireSchedulers, ɵBlockUntilFirstOperator, ɵZoneScheduler, ɵapplyMixins, ɵfetchInstance, ɵfirebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵlazySDKProxy, ɵlogAuthEmulatorError };\n\n//# sourceMappingURL=angular-fire.js.map"]},"metadata":{},"sourceType":"module"}